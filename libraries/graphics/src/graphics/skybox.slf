<@include gpu/Config.slh@>
<$VERSION_HEADER$>
//  Generated on <$_SCRIBE_DATE$>
//  skybox.frag
//  fragment shader
//
//  Created by Sam Gateau on 5/5/2015.
//  Copyright 2015 High Fidelity, Inc.
//
//  Distributed under the Apache License, Version 2.0.
//  See the accompanying file LICENSE or http://www.apache.org/licenses/LICENSE-2.0.html
//
<@include graphics/ShaderConstants.h@>

LAYOUT(binding=GRAPHICS_TEXTURE_SKYBOX) uniform samplerCube cubeMap;

struct Skybox {
    vec4 color;
};

LAYOUT(binding=GRAPHICS_BUFFER_SKYBOX_PARAMS) uniform skyboxBuffer {
    Skybox skybox;
};

layout(location=0) in vec3  _normal;
layout(location=0) out vec4 _fragColor;

void main(void) {
    vec3 coord = normalize(_normal);
    vec3 color = skybox.color.rgb;

    // blend is only set if there is a cubemap
    float check = float(skybox.color.a > 0.0);
    color = mix(color, texture(cubeMap, coord).rgb, check);
    color *= mix(vec3(1.0), skybox.color.rgb, check * float(skybox.color.a < 1.0));

    _fragColor = vec4(color, 0.0);
}
