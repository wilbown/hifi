<@include gpu/Config.slh@>
<$VERSION_HEADER$>
//  Generated on <$_SCRIBE_DATE$>
//
//  simple_textured.frag
//  fragment shader
//
//  Created by Clement Brisset on 5/29/15.
//  Copyright 2014 High Fidelity, Inc.
//
//  Distributed under the Apache License, Version 2.0.
//  See the accompanying file LICENSE or http://www.apache.org/licenses/LICENSE-2.0.html
//

<@include gpu/Color.slh@>
<@include DeferredBufferWrite.slh@>

<@include render-utils/ShaderConstants.h@>

// the albedo texture
LAYOUT(binding=0) uniform sampler2D originalTexture;

// the interpolated normal
layout(location=RENDER_UTILS_ATTR_NORMAL_WS) in vec3 _normalWS;
layout(location=RENDER_UTILS_ATTR_COLOR) in vec4 _color;
layout(location=RENDER_UTILS_ATTR_TEXCOORD01) in vec4 _texCoord01;
#define _texCoord0 _texCoord01.xy
#define _texCoord1 _texCoord01.zw

void main(void) {
    vec4 texel = texture(originalTexture, _texCoord0);
    texel = mix(texel, color_sRGBAToLinear(texel), float(_color.a <= 0.0));
    texel.rgb *= _color.rgb;

    packDeferredFragment(
        normalize(_normalWS),
        1.0,
        texel.rgb,
        DEFAULT_ROUGHNESS,
        DEFAULT_METALLIC,
        DEFAULT_EMISSIVE,
        DEFAULT_OCCLUSION,
        DEFAULT_SCATTERING);
}